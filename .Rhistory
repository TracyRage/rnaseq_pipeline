metadata
View(metadata)
metadata <- PHE_metadata %>% filter(gene %in% selected_genes)
metadata
ph <- pheatmap::pheatmap(norm_count[selected_genes, ],
annotation_col = subset(column_data, select=c(-group)),
annotation_row = metadata,
scale="row",
cutree_cols = 3,
cutree_rows = 5,
gaps_row = 10,
angle_col = 45,
cellheight = 7,
cellwidth = 30,
fontsize_row = 8)
norm_count[selected_genes, ]
dim(norm_count[selected_genes, ])
dim(metadata)
dim(selected_genes)
norm <- norm_count[selected_genes, ]
dim(norm)
metadta
metadata
norm_count <- normCounts(set_s)
selected_genes <- names(sort(discard(apply(norm_count, 1, var), ~.x == 0),
decreasing = TRUE))
selected_genes
norm <- norm_count[selected_genes, ]
norm
norm_count <- normCounts(set_s)
selected_genes <- names(sort(discard(apply(norm_count, 1, var), ~.x == 0),
decreasing = TRUE))
norm <- norm_count[selected_genes, ]
dim(norm)
norm
norm[total_gene, ]
total_gene
norm
norm <- as.dataframe(norm_count[selected_genes, ])
norm <- as.data.frame(norm_count[selected_genes, ])
norm
norm <- rownames_to_column(as.data.frame(norm_count[selected_genes, ]), gene)
norm <- rownames_to_column(as.data.frame(norm_count[selected_genes, ]), "gene")
norm
norm <- tibble(rownames_to_column(as.data.frame(norm_count[selected_genes, ]), "gene"))
norm
?inner_join
dim(PHE_metadata)
dim(PY_metadata)
# Create gene vector
BOTH <- inner_join(PHE_metadata, PY_metadata, by="gene")
BOTH
# Create gene vector
BOTH <- full_join(PHE_metadata, PY_metadata, by="gene")
BOTH
# Create gene vector
BOTH <- inner_join(PHE_metadata, PY_metadata, by="gene")
BOTH
# Create gene vector
BOTH <- inner_join(PHE_metadata, PY_metadata, by="gene") %>%
rename(pathway_name = pathway_name.x) %>%
select(pathway_name.y)
BOTH
# Create gene vector
BOTH <- inner_join(PHE_metadata, PY_metadata, by="gene") %>%
rename(pathway_name = pathway_name.x) %>%
select(gene, pathway_name.y)
BOTH
# Create gene vector
BOTH <- inner_join(PHE_metadata, PY_metadata, by="gene") %>%
rename(pathway_name = pathway_name.x) %>%
select(gene, pathway_name)
BOTH
norm
row_annot <- left_join(BOTH, norm, by="gene")
row_annot
row_annot <- left_join(BOTH, norm, by="gene") %>%
drop_na()
row_annot
ph <- pheatmap::pheatmap(norm_count[selected_genes, ],
annotation_col = subset(column_data, select=c(-group)),
annotation_row = row_annot,
scale="row",
cutree_cols = 3,
cutree_rows = 5,
gaps_row = 10,
angle_col = 45,
cellheight = 7,
cellwidth = 30,
fontsize_row = 8)
row_annot
norm_2 <- column_to_rownames(row_annot, "gene")
norm_2
norm_2 <- column_to_rownames(row_annot %>% select(-pathway_name), "gene")
norm_2
row_annot_2 <- row_annot %>% select(gene, pathway_name)
row_annot_2
norm_2
dim(norm_2)
dim(row_annot_2)
ph <- pheatmap::pheatmap(norm_2,
annotation_col = subset(column_data, select=c(-group)),
annotation_row = row_annot_2,
scale="row",
cutree_cols = 3,
cutree_rows = 5,
gaps_row = 10,
angle_col = 45,
cellheight = 7,
cellwidth = 30,
fontsize_row = 8)
norm_2
dim(norm_2)
dim(row_annot_2)
row_annot_2
?pheatmap
row_annot_2 <- as.data.frame(row_annot %>% select(gene, pathway_name))
ph <- pheatmap::pheatmap(norm_2,
annotation_col = subset(column_data, select=c(-group)),
annotation_row = row_annot_2,
scale="row",
cutree_cols = 3,
cutree_rows = 5,
gaps_row = 10,
angle_col = 45,
cellheight = 7,
cellwidth = 30,
fontsize_row = 8)
norm_2
row_annot_2
column_data
row_annot_2 <- column_to_rownames(row_annot %>% select(gene, pathway_name), "gene")
row_annot_2
norm_count <- normCounts(set_s)
selected_genes <- names(sort(discard(apply(norm_count, 1, var), ~.x == 0),
decreasing = TRUE))
norm <- tibble(rownames_to_column(as.data.frame(norm_count[selected_genes, ]), "gene"))
row_annot <- left_join(BOTH, norm, by="gene") %>%
drop_na()
norm_2 <- column_to_rownames(row_annot %>% select(-pathway_name), "gene")
row_annot_2 <- column_to_rownames(row_annot %>% select(gene, pathway_name), "gene")
ph <- pheatmap::pheatmap(norm_2,
annotation_col = subset(column_data, select=c(-group)),
annotation_row = row_annot_2,
scale="row",
cutree_cols = 3,
cutree_rows = 5,
gaps_row = 10,
angle_col = 45,
cellheight = 7,
cellwidth = 30,
fontsize_row = 8)
ph
ph <- pheatmap::pheatmap(norm_2,
annotation_col = subset(column_data, select=c(-group)),
annotation_row = row_annot_2,
scale="row",
cutree_cols = 3,
cutree_rows = 10,
gaps_row = 10,
angle_col = 45,
cellheight = 7,
cellwidth = 30,
fontsize_row = 8)
ph
ph <- pheatmap::pheatmap(norm_2,
annotation_col = subset(column_data, select=c(-group)),
annotation_row = row_annot_2,
scale="row",
cutree_cols = 2,
cutree_rows = 10,
gaps_row = 10,
angle_col = 45,
cellheight = 7,
cellwidth = 30,
fontsize_row = 8)
ph
ph <- pheatmap::pheatmap(norm_2,
annotation_col = subset(column_data, select=c(-group)),
annotation_row = row_annot_2,
scale="row",
cutree_cols = 3,
cutree_rows = 10,
gaps_row = 10,
angle_col = 45,
cellheight = 7,
cellwidth = 30,
fontsize_row = 8)
ph
ph <- pheatmap::pheatmap(norm_2,
annotation_col = subset(column_data, select=c(-group)),
annotation_row = row_annot_2,
scale="row",
cutree_rows = 10,
gaps_row = 10,
angle_col = 45,
cellheight = 7,
cellwidth = 30,
fontsize_row = 8)
ph
ph <- pheatmap::pheatmap(norm_2,
annotation_col = subset(column_data, select=c(-group)),
annotation_row = row_annot_2,
cluster_cols = FALSE,
scale="row",
cutree_rows = 10,
gaps_row = 10,
angle_col = 45,
cellheight = 7,
cellwidth = 30,
fontsize_row = 8)
ph
ph <- pheatmap::pheatmap(norm_2,
annotation_col = subset(column_data, select=c(-group)),
annotation_row = row_annot_2,
scale="row",
cutree_rows = 10,
gaps_row = 10,
angle_col = 45,
cellheight = 7,
cellwidth = 30,
fontsize_row = 8)
ph
ph <- pheatmap::pheatmap(norm_2,
annotation_col = subset(column_data, select=c(-group)),
annotation_row = row_annot_2,
scale="row",
cutree_rows = 10,
gaps_row = 10,
angle_col = 45,
cellheight = 8,
cellwidth = 30,
fontsize_row = 8)
ph
norm_count <- normCounts(set_s)
selected_genes <- names(sort(discard(apply(norm_count, 1, var), ~.x == 0),
decreasing = TRUE))
norm <- tibble(rownames_to_column(as.data.frame(norm_count[selected_genes, ]), "gene"))
row_annot <- left_join(BOTH, norm, by="gene") %>%
drop_na()
norm_2 <- column_to_rownames(row_annot %>% select(-pathway_name), "gene")
row_annot_2 <- column_to_rownames(row_annot %>% select(gene, pathway_name) %>%
rename(Pathway=pathway_name), "gene")
ph <- pheatmap::pheatmap(norm_2,
annotation_col = subset(column_data, select=c(-group)),
annotation_row = row_annot_2,
scale="row",
cutree_rows = 10,
gaps_row = 10,
angle_col = 45,
cellheight = 8,
cellwidth = 30,
fontsize_row = 8)
ph
column_data
norm_count <- normCounts(set_s)
selected_genes <- names(sort(discard(apply(norm_count, 1, var), ~.x == 0),
decreasing = TRUE))
norm <- tibble(rownames_to_column(as.data.frame(norm_count[selected_genes, ]), "gene"))
row_annot <- left_join(BOTH, norm, by="gene") %>%
drop_na()
norm_2 <- column_to_rownames(row_annot %>% select(-pathway_name), "gene")
row_annot_2 <- column_to_rownames(row_annot %>% select(gene, pathway_name) %>%
rename(Pathway=pathway_name), "gene")
colnames(column_data)[colnames(column_data) == "treatment"] <- "Treatment"
ph <- pheatmap::pheatmap(norm_2,
annotation_col = subset(column_data, select=c(-group)),
annotation_row = row_annot_2,
scale="row",
cutree_rows = 10,
gaps_row = 10,
angle_col = 45,
cellheight = 8,
cellwidth = 30,
fontsize_row = 8)
ph
ph <- pheatmap::pheatmap(norm_2,
annotation_col = subset(column_data, select=c(-group)),
annotation_row = row_annot_2,
annotation_names_col = FALSE,
scale="row",
cutree_rows = 10,
gaps_row = 10,
angle_col = 45,
cellheight = 8,
cellwidth = 30,
fontsize_row = 8)
ph
ph
ph <- pheatmap::pheatmap(norm_2,
annotation_col = subset(column_data, select=c(-group)),
annotation_row = row_annot_2,
annotation_names_col = FALSE,
scale="row",
cutree_rows = 10,
cutree_cols = 3,
gaps_row = 10,
angle_col = 45,
cellheight = 8,
cellwidth = 30,
fontsize_row = 8)
ph
ph <- pheatmap::pheatmap(norm_2,
annotation_col = subset(column_data, select=c(-group)),
annotation_row = row_annot_2,
annotation_names_col = FALSE,
scale="row",
cutree_rows = 10,
cutree_cols = 4,
gaps_row = 10,
angle_col = 45,
cellheight = 8,
cellwidth = 30,
fontsize_row = 8)
ph
ph <- pheatmap::pheatmap(norm_2,
annotation_col = subset(column_data, select=c(-group)),
annotation_row = row_annot_2,
annotation_names_col = FALSE,
scale="row",
cutree_rows = 10,
cutree_cols = 3,
gaps_row = 10,
gaps_col = 15,
angle_col = 45,
cellheight = 8,
cellwidth = 30,
fontsize_row = 8)
ph
ph <- pheatmap::pheatmap(norm_2,
annotation_col = subset(column_data, select=c(-group)),
annotation_row = row_annot_2,
annotation_names_col = FALSE,
scale="row",
cutree_rows = 10,
cutree_cols = 3,
gaps_row = 10,
gaps_col = 30,
angle_col = 45,
cellheight = 8,
cellwidth = 30,
fontsize_row = 8)
ph
ph <- pheatmap::pheatmap(norm_2,
annotation_col = subset(column_data, select=c(-group)),
annotation_row = row_annot_2,
annotation_names_col = FALSE,
scale="row",
cutree_rows = 15,
cutree_cols = 3,
gaps_row = 10,
gaps_col = 30,
angle_col = 45,
cellheight = 8,
cellwidth = 30,
fontsize_row = 8)
ph
ph <- pheatmap::pheatmap(norm_2,
annotation_col = subset(column_data, select=c(-group)),
annotation_row = row_annot_2,
annotation_names_col = FALSE,
scale="row",
cutree_rows = 15,
cutree_cols = 3,
gaps_row = 10,
gaps_col = 30,
angle_col = 45,
cellheight = 8,
cellwidth = 40,
fontsize_row = 8)
ph
source('~/bioinfo/anya/utilityFuns.R', echo=TRUE)
source("utilityFuns.R")
# Render final heatmap
render_final_hp <- function(rectified_set, column_data, row_data) {
# Normalize gene counts
norm_count <- normCounts(rectified_set)
# Select genes w/ variance != 0
selected_genes <- names(sort(discard(apply(norm_count, 1, var), ~.x == 0),
decreasing = TRUE))
norm <- tibble(rownames_to_column(as.data.frame(norm_count[selected_genes, ]), "gene"))
row_annot <- left_join(row_data, norm, by="gene") %>%
drop_na()
# Normalized dataframe
norm_2 <- column_to_rownames(row_annot %>% select(-pathway_name), "gene")
# Rectified rownames annotation
row_annot_2 <- column_to_rownames(row_annot %>% select(gene, pathway_name) %>%
rename(Pathway=pathway_name), "gene")
colnames(column_data)[colnames(column_data) == "treatment"] <- "Treatment"
ph <- pheatmap::pheatmap(norm_2,
annotation_col = subset(column_data, select=c(-group)),
annotation_row = row_annot_2,
annotation_names_col = FALSE,
scale="row",
cutree_rows = 15,
cutree_cols = 3,
gaps_row = 10,
gaps_col = 30,
angle_col = 45,
cellheight = 8,
cellwidth = 40,
fontsize_row = 8)
return(ph)
}
source("utilityFuns.R")
ph <- render_final_hp(rectified_set = set_s,
column_data = column_data,
row_data = BOTH)
ph
hm <- render_final_hp(rectified_set = set_s,
column_data = column_data,
row_data = BOTH)
BOTH
PHE_up
# Save heatplots
ggplot2::ggsave(plot=hm, "heatmap.eps", device="eps", path="analysis_results",
width=6)
ggplot2::ggsave(plot=hm, "heatmap.pdf", device="pdf", path="analysis_results",
width=6)
# Save log2FoldChange
readr::write_csv(PY_up, "analysis_results/py_log_up.csv")
readr::write_csv(PY_down, "analysis_results/py_log_down.csv")
readr::write_csv(PY_both, "analysis_results/py_log_both.csv")
readr::write_csv(PHE_up, "analysis_results/phe_log_up.csv")
readr::write_csv(PHE_down, "analysis_results/phe_log_down.csv")
readr::write_csv(PHE_both, "analysis_results/phe_log_both.csv")
# Save heatplots
ggplot2::ggsave(plot=hm, "heatmap.eps", device="eps", path="analysis_results",
width=10, height = 10)
ggplot2::ggsave(plot=hm, "heatmap.pdf", device="pdf", path="analysis_results",
width=10, height = 10)
# Save heatplots
ggplot2::ggsave(plot=hm, "heatmap.eps", device="eps", path="analysis_results",
width=10, height = 9)
ggplot2::ggsave(plot=hm, "heatmap.pdf", device="pdf", path="analysis_results",
width=10, height = 9)
# Save heatplots
ggplot2::ggsave(plot=hm, "heatmap.eps", device="eps", path="analysis_results",
width=10, height = 10)
ggplot2::ggsave(plot=hm, "heatmap.pdf", device="pdf", path="analysis_results",
width=10, height = 10)
# Save heatplots
ggplot2::ggsave(plot=hm, "heatmap.eps", device="eps", path="analysis_results",
width=11, height = 10)
ggplot2::ggsave(plot=hm, "heatmap.pdf", device="pdf", path="analysis_results",
width=11, height = 10)
BOTH
PHE_metadata
PHE_both
# Render row metadata
PHE_metadata <- PHE_both %>% select(gene, pathway_name, log2FoldChange)
source("utilityFuns.R")
library(tidyverse)
library(RUVSeq)
library(janitor)
# Render row metadata
PHE_metadata <- PHE_both %>% select(gene, pathway_name, log2FoldChange)
PY_metadata <- PY_both %>% select(gene, pathway_name, log2FoldChange)
# Create row annotation
BOTH <- inner_join(PHE_metadata, PY_metadata, by="gene") %>%
rename(pathway_name = pathway_name.x) %>%
select(gene, pathway_name)
hm <- render_final_hp(rectified_set = set_s,
column_data = column_data,
row_data = BOTH)
?pheatmap
ph <- pheatmap::pheatmap(norm_2,
annotation_col = subset(column_data, select=c(-group)),
annotation_row = row_annot_2,
annotation_names_col = FALSE,
scale="row",
cutree_rows = 15,
cutree_cols = 3,
gaps_row = 10,
gaps_col = 30,
angle_col = 45,
cellheight = 8,
cellwidth = 40,
fontsize_row = 8,
display_numbers = TRUE)
source('~/bioinfo/anya/utilityFuns.R', echo=TRUE)
source("utilityFuns.R")
hm <- render_final_hp(rectified_set = set_s,
column_data = column_data,
row_data = BOTH)
hm
hm
BOTH
# Render row metadata
PHE_metadata <- PHE_both %>% select(gene, pathway_name, log2FoldChange)
PY_metadata <- PY_both %>% select(gene, pathway_name, log2FoldChange)
# Create row annotation
BOTH <- inner_join(PHE_metadata, PY_metadata, by="gene") %>%
rename(pathway_name = pathway_name.x) %>%
select(gene, pathway_name)
hm <- render_final_hp(rectified_set = set_s,
column_data = column_data,
row_data = BOTH)
hm
PY_metadata
# Save heatplots
ggplot2::ggsave(plot=hm, "heatmap.eps", device="eps", path="analysis_results",
width=11, height = 10)
ggplot2::ggsave(plot=hm, "heatmap.pdf", device="pdf", path="analysis_results",
width=11, height = 10)
# Save log2FoldChange
readr::write_csv(PY_up, "analysis_results/py_log_up.csv")
readr::write_csv(PY_down, "analysis_results/py_log_down.csv")
readr::write_csv(PY_both, "analysis_results/py_log_both.csv")
readr::write_csv(PHE_up, "analysis_results/phe_log_up.csv")
readr::write_csv(PHE_down, "analysis_results/phe_log_down.csv")
readr::write_csv(PHE_both, "analysis_results/phe_log_both.csv")
